DROP TABLE IF EXISTS `Item`,`Container`,`Formula`;

CREATE TABLE `Item`(
	code INTEGER NOT NULL PRIMARY KEY,
	name VARCHAR NOT NULL,
	unit CHAR NOT NULL,
	degree FLOAT,
	return_rate FLOAT
);

CREATE TABLE `Container`(
	code INTEGER NOT NULL PRIMARY KEY,
	item_code INTEGER FOREIGN KEY REFERENCES Item(code),
	capacity FLOAT,
	amount FLOAT
);

CREATE TABLE `Formula`(
	id INTEGER NOT NULL PRIMARY KEY,
	code INTEGER NOT NULL,
	fabricated_item_code INTEGER FOREIGN KEY REFERENCES Item(code),
	amount FLOAT,
	item INTEGER FOREIGN KEY REFERENCES Item(code)
);

CREATE TABLE `Movement`(
	id INTEGER NOT NULL,
	type CHAR NOT NULL,
	fabric_date DATE,
	fabric_item INTEGER
);

CREATE TABLE `MovementOrigin` (
	id INTEGER NOT NULL FOREIGN KEY REFERENCES Movement(id),
	quantity FLOAT,
	container INTEGER NOT NULL FOREIGN KEY REFERENCES Container(code)
);

CREATE TABLE `MovementDestiny` (
	id INTEGER NOT NULL		FOREIGN KEY REFERENCES Movement(id),
	quantity FLOAT,
	container INTEGER NOT NULL	FOREIGN KEY REFERENCES Container(code)
);

CREATE TABLE `Buy`(
	id INTEGER NOT NULL PRIMARY KEY,
	buy_date DATE,
	item INTEGER FOREIGN KEY REFERENCES Item(code),
	supplier INTEGER FOREIGN KEY REFERENCES Supplier(id),
	quantity FLOAT,
	price FLOAT
);

CREATE TABLE `BuyInfo` (
	id INTEGER NOT NULL FOREIGN KEY REFERENCES Buy(id),
	quantity FLOAT,
	container INTEGER NOT NULL FOREIGN KEY REFERENCES Container(code)
);

CREATE TABLE `Sale`(
	id INTEGER NOT NULL PRIMARY KEY,
	sale_date DATE,
	item INTEGER FOREIGN KEY REFERENCES Item(code),
	quantity FLOAT,
	client INTEGER FOREIGN KEY REFERENCES Client(id),
	quantity FLOAT,
	price FLOAT
);

CREATE TABLE `SaleInfo` (
	id INTEGER NOT NULL FOREIGN KEY REFERENCES Sale(id),
	quantity FLOAT,
	container INTEGER NOT NULL FOREIGN KEY REFERENCES Container(code)
);

CREATE TABLE `Client`(
	id INTEGER NOT NULL PRIMARY KEY,
	name VARCHAR
);

CREATE TABLE `Supplier`(
	id INTEGER NOT NULL PRIMARY KEY,
	name VARCHAR
);
